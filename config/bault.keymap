#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            display-name = "Homerow Mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <180>;
            require-prior-idle-ms = <130>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        lbracket {
            timeout-ms = <30>;
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 1>;
        };

        lpar {
            timeout-ms = <30>;
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <2 3>;
        };

        rbracket {
            timeout-ms = <30>;
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 8>;
        };

        rpar {
            timeout-ms = <30>;
            bindings = <&kp RPAR>;
            key-positions = <7 6>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <34 11>;
            timeout-ms = <10>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <12 34>;
            timeout-ms = <10>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <13 34>;
            timeout-ms = <10>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        undo {
            bindings = <&kp LG(Z)>;
            key-positions = <34 14>;
            timeout-ms = <10>;
            require-prior-idle-ms = <10>;
            layers = <0>;
        };

        connectivity {
            bindings = <&mo 3>;
            key-positions = <33 36>;
        };
    };

    macros {
        figma_text: figma_text {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &tog 0>;
            label = "FIGMA_TEXT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q   &kp W  &kp E      &kp R        &kp T  &kp Y        &kp U  &kp I            &kp O       &kp P      &tog 0
&kp A   &kp S  &kp D      &kp F        &kp G  &kp H        &kp J  &kp K            &kp L       &kp SQT
&kp Z   &kp X  &kp C      &kp V        &kp B  &kp N        &kp M  &kp COMMA        &kp PERIOD  &kp SLASH
&kp N0  &mo 0  &kp ENTER  &lt 2 SPACE         &lt 1 ENTER         &kp RIGHT_SHIFT  &mo 3       &kp N0
            >;
        };

        num {
            bindings = <
&none                    &kp LS(LGUI)  &kp LBKT  &kp RBKT           &kp BACKSLASH  &none   &kp GRAVE  &kp MINUS  &kp EQUAL  &none               &none
&hm LEFT_SHIFT NUMBER_1  &kp N2        &kp N3    &hm LEFT_SHIFT N4  &kp N5         &kp N6  &kp N7     &kp N8     &kp N9     &hm RIGHT_SHIFT N0
&kp LEFT_ALT             &none         &none     &none              &none          &none   &none      &trans     &trans     &trans
&none                    &none         &none     &trans                            &trans             &trans     &none      &none
            >;
        };

        nav {
            bindings = <
&trans            &kp HOME  &kp UP    &kp END    &trans  &kp F10  &kp F7  &kp F8  &kp F9  &trans  &trans
&kp LEFT_GUI      &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans
&kp LS(LEFT_GUI)  &trans    &trans    &trans     &trans  &kp F12  &kp F1  &kp F2  &kp F3  &trans
&trans            &trans    &trans    &trans             &trans           &trans  &trans  &trans
            >;
        };

        connectivity {
            bindings = <
&studio_unlock  &trans  &trans  &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bootloader
&trans          &trans  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans
&trans          &trans  &trans  &trans  &trans  &bt BT_CLR    &out OUT_BLE  &out OUT_USB  &out OUT_TOG  &trans
&kp N0          &trans  &trans  &trans          &trans                      &trans        &trans        &kp N0
            >;
        };
    };
};
